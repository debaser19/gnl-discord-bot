name: Deploy to Amazon ECS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: us-east-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: warcraft-gym           # set this to your Amazon ECR repository name
  ECS_SERVICE: warcraft-gym-service                 # set this to your Amazon ECS service name
  ECS_CLUSTER: warcraft-gym                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .aws/aws-task-definition.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: warcraft-gym           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition
  IMAGE_NAME: warcraft-gym

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        # IMAGE_TAG: ${{ github.sha }} # used github sha as image tag
        IMAGE_TAG: latest
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to AWS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME
          port: 22
          script: |
            # Login to registry
            sudo `aws ecr get-login --no-include-email`
            # Stop running container
            sudo docker stop $(echo $IMAGE_NAME)
            # Remove old container
            sudo docker rm $(echo $IMAGE_NAME)
            # Run a new container from a new image
            sudo docker run -d \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            ${{ steps.login-ecr.outputs.registry }}/$(echo $IMAGE_NAME):$(echo ${{ github.sha }})
            sudo echo "DISCORD_TOKEN='${{ secrets.DISCORD_TOKEN }}'" > config.py
            sudo echo "W3C_URL='${{ secrets.W3C_URL }}'" >> config.py
            sudo echo '${{ secrets.SHEETS_KEY }}' > ${{ secrets.SHEETS_KEY_FILENAME }}
            sudo docker cp config.py gnl-bot:/data
            sudo docker cp ${{ secrets.SHEETS_KEY_FILENAME }} warcraft-gym:/data
            sudo rm -f port* config.py 
